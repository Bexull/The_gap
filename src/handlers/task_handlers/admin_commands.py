import asyncio
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


async def clear_topic_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–∏–∫–∞ –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫–µ, –≤–∫–ª—é—á–∞—è –∫–æ–º–∞–Ω–¥—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ
    if update.message.chat.type not in ["group", "supergroup"]:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ —Ç–æ–ø–∏–∫–µ
    if not update.message.message_thread_id:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ —Ç–æ–ø–∏–∫–∞!")
        return
    
    chat_id = update.message.chat.id
    thread_id = update.message.message_thread_id
    user = update.message.from_user
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        chat_member = await context.bot.get_chat_member(chat_id, user.id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å)
        if chat_member.status not in ["administrator", "creator"]:
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–∏–∫–∞!")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        confirm_msg = await update.message.reply_text(
            "üßπ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É —Ç–æ–ø–∏–∫–∞...\n"
            "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
        )
        
        deleted_count = 0
        errors_count = 0
        skipped_count = 0
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —É–¥–∞–ª—è–µ–º –∏—Ö –ø–∞—á–∫–∞–º–∏
        current_message_id = update.message.message_id
        batch_size = 100
        
        for offset in range(0, 1000, batch_size):
            batch_deleted = 0
            
            for msg_id in range(current_message_id - offset, 
                              max(1, current_message_id - offset - batch_size), -1):
                
                # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ "@" –≤ –Ω–∞—á–∞–ª–µ
                should_skip = False
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
                    message = await context.bot.forward_message(
                        chat_id=chat_id,
                        from_chat_id=chat_id,
                        message_id=msg_id,
                        message_thread_id=thread_id
                    )
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    message_text = ""
                    if message.text:
                        message_text = message.text.strip()
                    elif message.caption:
                        message_text = message.caption.strip()
                    
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "@", —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º
                    if message_text.startswith("@"):
                        should_skip = True
                        skipped_count += 1
                    
                    # –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await context.bot.delete_message(chat_id, message.message_id)
                    
                except Exception:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫—É —É–¥–∞–ª–µ–Ω–∏—è
                    pass
                
                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–µ—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
                if should_skip:
                    continue
                
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await context.bot.delete_message(
                        chat_id=chat_id, 
                        message_id=msg_id
                    )
                    deleted_count += 1
                    batch_deleted += 1
                    
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã API
                    await asyncio.sleep(0.1)
                    
                except Exception as e:
                    error_msg = str(e).lower()
                    if "message to delete not found" not in error_msg:
                        if any(keyword in error_msg for keyword in [
                            "message can't be deleted", 
                            "pinned", 
                            "can't delete",
                            "bad request"
                        ]):
                            # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ –∏–ª–∏ —Å–ª—É–∂–µ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            skipped_count += 1
                        else:
                            errors_count += 1
            
            # –ï—Å–ª–∏ –≤ –ø–∞—á–∫–µ –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–∏–ª–∏, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º
            if batch_deleted == 0:
                break
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 50 —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            if deleted_count % 50 == 0 and deleted_count > 0:
                try:
                    await context.bot.edit_message_text(
                        chat_id=chat_id,
                        message_id=confirm_msg.message_id,
                        text=f"üßπ –û—á–∏—Å—Ç–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...\n"
                             f"‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                             f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}"
                    )
                except:
                    pass
        
        # –£–¥–∞–ª—è–µ–º —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É /clear
        try:
            await context.bot.delete_message(chat_id, update.message.message_id)
            deleted_count += 1
        except Exception as e:
            pass
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        final_text = f"‚úÖ –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ø–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n" \
                    f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n" \
                    f"‚Ä¢ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted_count}\n"
        
        if skipped_count > 0:
            final_text += f"‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ (@ –∏–ª–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ): {skipped_count}\n"
        
        if deleted_count == 0:
            final_text = "‚ÑπÔ∏è –í —Ç–æ–ø–∏–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
        
        try:
            await context.bot.edit_message_text(
                chat_id=chat_id,
                message_id=confirm_msg.message_id,
                text=final_text
            )
            
            # –£–¥–∞–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
            await asyncio.sleep(10)
            try:
                await context.bot.delete_message(chat_id, confirm_msg.message_id)
            except:
                pass
                
        except:
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            temp_msg = await context.bot.send_message(
                chat_id=chat_id,
                text=final_text,
                message_thread_id=thread_id
            )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
            await asyncio.sleep(10)
            try:
                await context.bot.delete_message(chat_id, temp_msg.message_id)
            except:
                pass
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–æ–ø–∏–∫–∞: {e}")
        try:
            error_msg = await update.message.reply_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–æ–ø–∏–∫–∞:\n{str(e)}"
            )
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
            await asyncio.sleep(10)
            try:
                await context.bot.delete_message(chat_id, error_msg.message_id)
                await context.bot.delete_message(chat_id, update.message.message_id)
            except:
                pass
        except:
            pass


async def clear_topic_confirm_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    """
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ —Ç–æ–ø–∏–∫–µ
    if not update.message.message_thread_id:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ —Ç–æ–ø–∏–∫–∞!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    chat_id = update.message.chat.id
    user = update.message.from_user
    
    try:
        chat_member = await context.bot.get_chat_member(chat_id, user.id)
        if chat_member.status not in ["administrator", "creator"]:
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–∏–∫–∞!")
            return
    except:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", callback_data=f"clear_confirm_{update.message.message_thread_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="clear_cancel")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–ø–∏–∫?\n\n"
        "üóëÔ∏è –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫–µ!\n"
        "‚ùó –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        reply_markup=reply_markup
    )


async def clear_topic_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–∏–∫–∞"""
    
    query = update.callback_query
    await query.answer()
    
    if query.data == "clear_cancel":
        await query.edit_message_text("‚ùå –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ø–∏–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    
    if query.data.startswith("clear_confirm_"):
        thread_id = int(query.data.split("_")[-1])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞
        chat_id = query.message.chat.id
        user = query.from_user
        
        try:
            chat_member = await context.bot.get_chat_member(chat_id, user.id)
            if chat_member.status not in ["administrator", "creator"]:
                await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–∏–∫–∞!")
                return
        except:
            await query.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!")
            return
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
        await query.edit_message_text("üßπ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É —Ç–æ–ø–∏–∫–∞...")
        
        # –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é)
        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∫–æ–¥—É –∏–∑ clear_topic_handler, –Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –¥–ª—è callback
